{
  "openapi": "3.0.0",
  "info": {
    "title": "OsBichos Documentation",
    "description": "This is an API for OsBichos, an project to help dogs and cats to find a new home!<hr>",
    "version": "1.0.0",
    "contact": {
      "email": "arthuur.fronza2011@gmail.com"
    }
  },
  "host": "https://api.osbichos.net.br",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/pets": {
      "post": {
        "tags": [
          "Pets"
        ],
        "summary": "Create a pet",
        "description": "Create a new pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "description": {
                    "type": "string",
                    "required": true
                  },
                  "sex": {
                    "type": "string",
                    "enum": ["M", "F"],
                    "required": true
                  },
                  "age": {
                    "type": "integer"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Pets"
        ],
        "summary": "Update a pet",
        "description": "Update a already existent pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "required": true
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sex": {
                    "type": "string",
                    "enum": ["M", "F"]
                  },
                  "age": {
                    "type": "integer"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Pets"
        ],
        "summary": "Delete a pet",
        "description": "Delete a already existent pet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Pet ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Pet deleted with success."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pets"
        ],
        "summary": "List all pets",
        "description": "List all the pets registered",
        "responses": {
          "200": {
            "description": "Pets list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/definitions/Pet"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{id}": {
      "get": {
        "tags": [
          "Pets"
        ],
        "summary": "Get a pet",
        "description": "Get a pet by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pet ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Pet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "description": {
          "type": "string",
          "required": true
        },
        "sex": {
          "type": "string",
          "required": true,
          "enum": [
            "F",
            "M"
          ]
        },
        "age": {
          "type": "integer",
          "required": false
        },
        "weight": {
          "type": "number",
          "required": false
        },
        "views": {
          "type": "integer",
          "required": true
        },
        "adopted": {
          "type": "string",
          "required": true
        },
        "active": {
          "type": "string",
          "required": true
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "integer",
          "required": true,
          "enum": [
            200,
            201,
            400,
            401,
            404,
            500
          ]
        }
      }
    }
  }
}
